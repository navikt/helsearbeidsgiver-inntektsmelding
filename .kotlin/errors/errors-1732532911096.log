kotlin version: 2.0.21
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.base/java.util.Arrays.copyOfRangeByte(Arrays.java:3863)
	at java.base/java.util.Arrays.copyOfRange(Arrays.java:3854)
	at java.base/java.lang.StringLatin1.newString(StringLatin1.java:752)
	at java.base/java.lang.String.substring(String.java:2839)
	at java.base/java.lang.String.subSequence(String.java:2872)
	at kotlin.text.StringsKt__StringsKt.split$StringsKt__StringsKt(Strings.kt:1369)
	at kotlin.text.StringsKt__StringsKt.split(Strings.kt:1317)
	at kotlin.text.StringsKt__StringsKt.split$default(Strings.kt:1313)
	at org.jetbrains.kotlin.load.kotlin.VirtualFileKotlinClass.getContainingLibrary(VirtualFileKotlinClass.kt:32)
	at org.jetbrains.kotlin.fir.java.deserialization.JvmClassFileBasedSymbolProvider.computePackagePartInfo(JvmClassFileBasedSymbolProvider.kt:87)
	at org.jetbrains.kotlin.fir.java.deserialization.JvmClassFileBasedSymbolProvider.computePackagePartsInfos(JvmClassFileBasedSymbolProvider.kt:70)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.tryComputePackagePartInfos(AbstractFirDeserializedSymbolProvider.kt:211)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.access$tryComputePackagePartInfos(AbstractFirDeserializedSymbolProvider.kt:93)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:73)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:71)
	at org.jetbrains.kotlin.fir.caches.FirThreadUnsafeCache.getValue(FirThreadUnsafeCachesFactory.kt:40)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.getPackageParts(AbstractFirDeserializedSymbolProvider.kt:411)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.access$getPackageParts(AbstractFirDeserializedSymbolProvider.kt:93)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider$symbolNamesProvider$1.computeTopLevelCallableNames(AbstractFirDeserializedSymbolProvider.kt:138)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:73)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:71)
	at org.jetbrains.kotlin.fir.caches.FirThreadUnsafeCache.getValue(FirThreadUnsafeCachesFactory.kt:40)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider.getTopLevelCallableNamesInPackage(FirCachedSymbolNamesProvider.kt:187)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCompositeCachedSymbolNamesProvider.computeTopLevelCallableNames(FirCachedSymbolNamesProvider.kt:152)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider$symbolNamesProvider$1.computeTopLevelCallableNames(FirCachingCompositeSymbolProvider.kt:59)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:73)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$2.invoke(FirCachesFactory.kt:71)
	at org.jetbrains.kotlin.fir.caches.FirThreadUnsafeCache.getValue(FirThreadUnsafeCachesFactory.kt:40)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider.getTopLevelCallableNamesInPackage(FirCachedSymbolNamesProvider.kt:187)
	at org.jetbrains.kotlin.fir.resolve.providers.FirSymbolNamesProvider.mayHaveTopLevelCallable(FirSymbolNamesProvider.kt:129)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider.getTopLevelPropertySymbolsTo(FirCachingCompositeSymbolProvider.kt:115)
	at org.jetbrains.kotlin.fir.resolve.providers.FirSymbolProvider.getTopLevelPropertySymbols(FirSymbolProvider.kt:53)


