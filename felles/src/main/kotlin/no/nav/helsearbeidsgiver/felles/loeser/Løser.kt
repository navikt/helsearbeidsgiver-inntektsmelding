package no.nav.helsearbeidsgiver.felles.loeser

import no.nav.helse.rapids_rivers.JsonMessage
import no.nav.helsearbeidsgiver.felles.BehovType
import no.nav.helsearbeidsgiver.felles.Key
import no.nav.helsearbeidsgiver.felles.value

/**
 * Grunnlaget for en enkel l칮ser som lytter etter [behovType] og bruker [l칮s] for 친 finne l칮sningen p친 behovet.
 * [createReaders] kan brukes dersom man trenger 친 lese verdier fra behovet.
 *
 * __Viktig!__: Den enkleste feilen i en implementerende klasse er 친 ikke kalle [start] i `init`. Gj칮res ikke det vil l칮seren ikke v칝re aktiv.
 *
 * Eksempel p친 bruk:
 * ```
 * class SecondBreakfastL칮ser : L칮ser() {
 *     override val behovType = BehovType.SECOND_BREAKFAST
 *
 *     lateinit var hobbit(): Behov.() -> String
 *
 *     init {
 *         start()
 *     }
 *
 *     override fun BehovReader.createReaders() {
 *         hobbit = readFn(Key.HOBBIT)
 *     }
 *
 *     override fun Behov.l칮s(): String =
 *         if (hobbit() == "Pippin") "游꼝"
 *         else ""
 * ```
 *
 * Implementasjonsdetaljer (ikke viktig for 친 bruke klassen):
 * [Behov] og [BehovReader] brukes for 친 forsikre oss om at samtlige n칮kler som brukes til uthente verdier fra behov faktisk eksisterer i behovet.
 * Det kan garanteres basert p친 f칮lgende:
 * - [Behov] wrapper et behov og gj칮r det utilgjengelig utenfor modulen.
 * - [BehovReader] gir muligheten til 친 opprette funksjoner som kan lese verdier fra [Behov]. N칮kler brukt til lesing registreres.
 * - [BehovReader] er kun tilgjengelig (utenfor modulen) i [createReaders].
 * - [Behov] er kun tilgjengelig (utenfor modulen) i [l칮s].
 * - [PacketSolver] markerer n칮kler registrert i [BehovReader] som p친krevd for innkommende behov.
 */
abstract class L칮ser {
    /** Hvilken [BehovType] som l칮seren skal lytte etter og l칮se. */
    abstract val behovType: BehovType

    /** Opprett funksjoner for 친 lese verdier fra [Behov]. */
    abstract fun BehovReader.createReaders()

    /** Finner l칮sningen p친 behovet uttrykket i [Behov]. */
    abstract fun Behov.l칮s(): Any

    /** N칮kler som blir brukt for 친 lese verdier fra [Behov] (packet). */
    internal val behovReadingKeys: MutableSet<Key> = mutableSetOf()

    /** __Viktig!__: Denne m친 kalles i implementerende klasses `init`-funksjon. */
    fun start() {
        BehovReader().createReaders()
        PacketSolver(this)
    }

    /** Tilgjengeliggj칮r l칮sefunksjon [l칮s] for [PacketSolver] (kan ikke kalles direkte siden den extender intern klasse). */
    internal fun l칮sBehov(packet: JsonMessage): Any =
        Behov(packet).l칮s()

    /** Tilgjengeliggj칮r opprettelse av funksjoner for 친 lese verdier fra [Behov]. */
    inner class BehovReader internal constructor() {
        /** @return Funksjon for 친 lese verdi for [key] fra [Behov]. */
        fun readFn(key: Key): Behov.() -> String {
            behovReadingKeys.add(key)

            return { packet.value(key).asText() }
        }
    }

    /** Tilgjengeliggj칮r funksjoner opprettet i [createReaders]. */
    inner class Behov internal constructor(
        internal val packet: JsonMessage
    )
}
