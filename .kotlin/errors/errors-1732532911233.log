kotlin version: 2.0.21
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarHandler.splitPath(FastJarHandler.kt:98)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarHandler.createFile(FastJarHandler.kt:66)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarHandler.<init>(FastJarHandler.kt:54)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarFileSystem.myHandlers$lambda$0(FastJarFileSystem.kt:24)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarFileSystem$$Lambda/0x000000700127f660.invoke(Unknown Source)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarFileSystem.myHandlers$lambda$1(FastJarFileSystem.kt:24)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarFileSystem$$Lambda/0x000000700127f878.fun(Unknown Source)
	at org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentFactoryMap$2.create(ConcurrentFactoryMap.java:174)
	at org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentFactoryMap.get(ConcurrentFactoryMap.java:40)
	at org.jetbrains.kotlin.cli.jvm.compiler.jarfs.FastJarFileSystem.findFileByPath(FastJarFileSystem.kt:51)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.findJarRoot(jvmCompilerPipeline.kt:491)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.contentRootToVirtualFile(jvmCompilerPipeline.kt:479)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.createProjectEnvironment$lambda$14(jvmCompilerPipeline.kt:420)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt$$Lambda/0x00000070012cce90.invoke(Unknown Source)
	at org.jetbrains.kotlin.cli.jvm.compiler.ClasspathRootsResolver.convertClasspathRoots(ClasspathRootsResolver.kt:81)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.createProjectEnvironment(jvmCompilerPipeline.kt:430)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:141)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/java.lang.invoke.LambdaForm$DMH/0x00000070010a3c00.invokeInterface(LambdaForm$DMH)
	at java.base/java.lang.invoke.LambdaForm$MH/0x0000007001a4d400.invoke(LambdaForm$MH)


